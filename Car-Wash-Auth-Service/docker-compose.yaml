version: '3.9'

services:
  zookeeper:
    image: confluentinc/cp-zookeeper:7.4.4
    container_name: zookeeper_auht_car_wash
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
    ports:
      - 2182:2181
    networks:
      - GLhost

  kafka:
    image: confluentinc/cp-kafka:7.4.4
    container_name: kafka_auth_car_wash
    depends_on:
      - zookeeper
    ports:
      - 9091:9092
      - 29091:29092
    networks:
      - GLhost
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092,PLAINTEXT_HOST://localhost:29092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1

  migrate:
    image: migrate/migrate
    networks:
      - GLhost
    volumes:
      - ./migrations:/migrations
    command: [ "-path", "/migrations", "-database",  
                "postgres://postgres:20005@auth:5432/auth_exam?sslmode=disable", 
                "up" ]
    depends_on:
      - postgres-db

  postgres-db:
    container_name: auth
    image: postgres:latest
    environment:
      PGUSER: postgres
      POSTGRES_PASSWORD: 20005
      PGDATA: /data/postgres
      POSTGRES_DB: auth_exam 
    volumes:
      - db:/auth-database/auth-memory
    ports:
      - "5434:5432"
    networks:
      - GLhost
    restart: unless-stopped
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -d postgres"]
      interval: 30s
      timeout: 10s
      retries: 5   

  auth_service:
    container_name: auth_service
    build: .
    depends_on:
      - postgres-db
      - kafka
      - redis
    ports:
      - "8085:8085"
      - "9999:9999"
    networks:
      - GLhost

  redis:
    image: redis:latest
    container_name: redis
    ports:
      - "6380:6379"
    networks:
      - GLhost

# Docker Networks
networks:
  GLhost:
    external: true
    name: car_wash
    driver: bridge      

volumes:
  db:
